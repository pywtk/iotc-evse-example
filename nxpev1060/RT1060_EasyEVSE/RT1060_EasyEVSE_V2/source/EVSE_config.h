/**************************************************************************/
/*                                                                                                                              */
/*       Copyright (c) Microsoft Corporation. All rights reserved.        */
/*                                                                                                                               */
/*       This software is licensed under the Microsoft Software License   */
/*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
/*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
/*       and in the root directory of this software.                      */
/*                                                                                                                               */
/**************************************************************************/

/**************************************************************************/
/* Copyright 2018-2022 NXP											      */
/* NXP Confidential. This software is owned or controlled by NXP and may  */
/* only be used strictly in accordance with the applicable license terms. */
/* By expressly accepting such terms or by downloading, installing,       */
/* activating and/or otherwise using the software, you are agreeing that  */
/* you have read, and that you agree to comply with and are bound by,     */
/* such license terms.  If you do not agree to be bound by the applicable */
/* license terms, then you may not retain, install, activate or otherwise */
/* use the software                                                       */
/**************************************************************************/

#ifndef SAMPLE_CONFIG_H
#define SAMPLE_CONFIG_H

#ifdef __cplusplus
extern   "C" {
#endif

/*
 * IoT-Connect config for conditionals in EVSE_iot_comms.c
 */
#define DISABLE_FOR_IOTCONNECT				// Disables setup of the shadow and command topics

/*************************************************************************************************/
/* This sample uses three different schemes to authenticate to IoT Central                                   */
/*  Set ONLY ONE authentication scheme with a 1 to select, the other two should be set to 0    */
/*************************************************************************************************/
#define EVSE_SAS_AUTH                    0   /*  Set to one to use  : symmetric keys  */
#define EVSE_X509_AUTH                   1  /*  Set to one to use  : certificate stored in i.MX RT106x Flash*/
#define EVSE_X509_SE050_AUTH     		 0  /*  Set to one to use  : certificate stored securely in SE050 Secure module */

#if    ( EVSE_SAS_AUTH == 1)
    #define USE_DEVICE_SYMMETRIC_KEY 1 /* do not modify */
/* after the device has been registered and  provisioned with DPS, */
/* the DEVICE_ID is the same than REGISTRATION ID                          */
    #define DEVICE_ID                                             "copy here your device ID"
    /* Paste the symmetric key value from the device connection prompt in the Azure Iot Central Application */
    #define DEVICE_SYMMETRIC_KEY                   				  "copy here your device symmetric key"
#elif ( EVSE_X509_AUTH == 1)
	#define USE_DEVICE_CERTIFICATE 1
/* after the device has been registered and  provisioned with DPS, */
/* the DEVICE_ID is the same than REGISTRATION ID                          */
   #define DEVICE_ID                                        "mgevsedev"

#elif (EVSE_X509_SE050_AUTH == 1 )
   #define USE_SE05x_DEVICE_CERTIFICATE 1     /** do not modify this define*/
/* after the device has been registered and  provisioned with DPS, */
/* the DEVICE_ID is the same than REGISTRATION ID                          */
   #define DEVICE_ID                                        "copy here your device ID"

#endif /* Authentication scheme selection */

/*******************************************************************************************/
/* Set to 1  to contact DPS  service, 0 to connect to application  directly                              */
/* If this is the first time the device will be registered, you must set this define to 1,         */
/* After a successful registration , you may change it to zero , reducing subsequent        */
 /* device connection times                                                                                                            */
/******************************************************************************************/
#define EVSE_DPS                            0

#if (EVSE_DPS == 1)

    #define  ENABLE_DPS_SAMPLE 1    /** do not modify the ENDPOINT define */

	/*  Fixed DPS endpoint, we recommended to leave it as it is,  unless you have a private DPS endpoint */
	#define ENDPOINT                                    "global.azure-devices-provisioning.net"

   /* From the Azure Iot Central application paste your device ID_SCOPE */
	#define ID_SCOPE                                     "copy here your device ID scope"

/* Use the same registration ID that you used to register the device in the Azure Iot Central application
*  Please note that  for X509 enrollment registration ID  must match device certificate CN */
	#define REGISTRATION_ID                      DEVICE_ID


#elif( EVSE_DPS == 0)
/* Required when DPS is not used.  */
/******************************************************************************************/
 /* These values can be picked from device connection string which is of format :           */
 /* HostName=<host1>;DeviceId=<device1>;SharedAccessKey=<key1>                           */
 /* HOST_NAME can be set to <host1>,                                                                                      */
 /* DEVICE_ID can be set to <device1>,                                                                                       */
 /* DEVICE_SYMMETRIC_KEY can be set to <key1>.                                                                  */
/*  The Host name string  can be picked from the Log terminal                                            */
/******************************************************************************************/
#define HOST_NAME                                   "a3etk4e19usyja-ats.iot.us-east-1.amazonaws.com" /* Use with MyEasyEVSEDevice and 377808958120579818576399*/
#endif /* DPS selection */


/* Defined, telemetry is disabled. */
/*
#define DISABLE_TELEMETRY_SAMPLE
*/

/* Defined, C2D is disabled. */
/*
#define DISABLE_C2D_SAMPLE
*/

/* Defined, Direct method is disabled. */
/*
#define DISABLE_DIRECT_METHOD_SAMPLE
*/

/* Defined, Device twin is disabled. */
/*
#define DISABLE_DEVICE_TWIN_SAMPLE
*/

/* Optional module ID.  */
#ifndef MODULE_ID
#define MODULE_ID                                   ""
#endif /* MODULE_ID */


#ifdef USE_DEVICE_CERTIFICATE
/* Using X509 certificate authenticate to connect to IoT Central,
   set the device certificate as your device.  */

const unsigned char sample_device_cert_ptr[] = {
  0x30, 0x82, 0x03, 0x59, 0x30, 0x82, 0x02, 0x41, 0xa0, 0x03, 0x02, 0x01,
  0x02, 0x02, 0x14, 0x73, 0x63, 0x2e, 0x74, 0xe9, 0xf0, 0xd2, 0xf6, 0x79,
  0x02, 0x94, 0x97, 0xe7, 0xff, 0xad, 0xc7, 0xab, 0xcc, 0x76, 0x65, 0x30,
  0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b,
  0x05, 0x00, 0x30, 0x4d, 0x31, 0x4b, 0x30, 0x49, 0x06, 0x03, 0x55, 0x04,
  0x0b, 0x0c, 0x42, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x20, 0x57, 0x65,
  0x62, 0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x20, 0x4f,
  0x3d, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x20,
  0x49, 0x6e, 0x63, 0x2e, 0x20, 0x4c, 0x3d, 0x53, 0x65, 0x61, 0x74, 0x74,
  0x6c, 0x65, 0x20, 0x53, 0x54, 0x3d, 0x57, 0x61, 0x73, 0x68, 0x69, 0x6e,
  0x67, 0x74, 0x6f, 0x6e, 0x20, 0x43, 0x3d, 0x55, 0x53, 0x30, 0x1e, 0x17,
  0x0d, 0x32, 0x34, 0x30, 0x33, 0x32, 0x30, 0x31, 0x31, 0x34, 0x39, 0x33,
  0x31, 0x5a, 0x17, 0x0d, 0x34, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33,
  0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x1e, 0x31, 0x1c, 0x30, 0x1a, 0x06,
  0x03, 0x55, 0x04, 0x03, 0x0c, 0x13, 0x41, 0x57, 0x53, 0x20, 0x49, 0x6f,
  0x54, 0x20, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
  0x65, 0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48,
  0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f,
  0x00, 0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01, 0x00, 0xc4, 0xc3,
  0x70, 0x40, 0x4d, 0x54, 0x38, 0xba, 0x94, 0x3f, 0x76, 0x0b, 0xb8, 0x30,
  0x5c, 0x60, 0xe8, 0x47, 0xd2, 0xae, 0x3b, 0xfd, 0xf0, 0xbd, 0x99, 0x6b,
  0xba, 0x75, 0x06, 0x81, 0x70, 0xc6, 0xdf, 0x34, 0xd4, 0xa0, 0xd5, 0x11,
  0xaf, 0xdc, 0xa4, 0xc9, 0x4d, 0x37, 0xc6, 0x24, 0x41, 0xaa, 0x03, 0x62,
  0x75, 0xbf, 0xb8, 0x09, 0xb2, 0xcf, 0x8f, 0x33, 0x0a, 0x57, 0x40, 0x1b,
  0x84, 0x27, 0x36, 0x28, 0x64, 0xf2, 0xcf, 0x8d, 0x6e, 0x79, 0x6c, 0xdc,
  0x95, 0xb8, 0x45, 0x31, 0x1f, 0xe0, 0xed, 0x71, 0xc0, 0x23, 0xee, 0xa2,
  0x79, 0xdd, 0x03, 0xae, 0xce, 0x6c, 0x9d, 0x3b, 0x2f, 0x34, 0x7a, 0x53,
  0x73, 0x8b, 0x48, 0xcf, 0xfb, 0x25, 0x47, 0xc0, 0xae, 0x8d, 0x25, 0x0e,
  0x72, 0x28, 0xe0, 0x6e, 0x71, 0x5c, 0x35, 0x30, 0x0f, 0xb2, 0x8d, 0x75,
  0x0c, 0x59, 0x6c, 0x59, 0x89, 0x54, 0x40, 0xfd, 0x7d, 0x83, 0x34, 0xb2,
  0x15, 0x7a, 0x77, 0x58, 0x89, 0xf5, 0x8e, 0xdf, 0xfb, 0x2e, 0xa5, 0x02,
  0x9a, 0x78, 0x44, 0xc4, 0x8f, 0x46, 0x42, 0x98, 0x77, 0xd2, 0x6e, 0x81,
  0x86, 0xe7, 0x32, 0xd9, 0xbb, 0xc8, 0x3a, 0xa2, 0xa0, 0x08, 0x54, 0xdf,
  0xad, 0x83, 0xaa, 0x5c, 0x9f, 0xd5, 0xd3, 0xca, 0xd8, 0x3c, 0xe3, 0x0a,
  0xff, 0x9f, 0x78, 0x2b, 0x2d, 0x5f, 0x53, 0xf0, 0xed, 0xa4, 0xe0, 0x48,
  0x5e, 0x8c, 0x42, 0x50, 0xb1, 0xec, 0xde, 0xe8, 0x7e, 0xd4, 0xfc, 0x3c,
  0x14, 0x2c, 0x06, 0x96, 0x37, 0x56, 0xc2, 0x29, 0x2b, 0xd1, 0xa3, 0x80,
  0x19, 0xfe, 0xe9, 0x56, 0xf4, 0x69, 0x7e, 0x42, 0x91, 0x74, 0xdd, 0x06,
  0x70, 0x62, 0x2e, 0xf5, 0xac, 0x5a, 0xfc, 0xc6, 0xc4, 0x49, 0x1c, 0xe8,
  0xc4, 0xf3, 0xcd, 0xd8, 0x34, 0xca, 0x76, 0xee, 0x4e, 0xa3, 0x08, 0x06,
  0x54, 0x89, 0x02, 0x03, 0x01, 0x00, 0x01, 0xa3, 0x60, 0x30, 0x5e, 0x30,
  0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14,
  0xe9, 0x60, 0xd8, 0x5a, 0x2e, 0xcd, 0xf6, 0x9b, 0x4c, 0x44, 0xb6, 0xea,
  0x8e, 0x49, 0x1f, 0x32, 0xec, 0x60, 0xe4, 0xd2, 0x30, 0x1d, 0x06, 0x03,
  0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0xad, 0xb7, 0x82, 0xeb, 0xbc,
  0xf9, 0x6c, 0xc4, 0x91, 0xcb, 0x75, 0x28, 0x14, 0x95, 0x83, 0xda, 0x72,
  0xb8, 0x75, 0x6a, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01,
  0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f,
  0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x0d, 0x06,
  0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05, 0x00,
  0x03, 0x82, 0x01, 0x01, 0x00, 0x8c, 0x3d, 0xf3, 0x1b, 0xf8, 0x99, 0xba,
  0xdb, 0xff, 0x78, 0x8f, 0xb7, 0x31, 0x49, 0x62, 0xb0, 0x51, 0xc3, 0x53,
  0x09, 0xe2, 0x11, 0x95, 0x50, 0xbf, 0x4f, 0x24, 0x5a, 0x37, 0xc0, 0x51,
  0x21, 0xde, 0xa7, 0x70, 0x2e, 0xb4, 0xfc, 0x62, 0x85, 0xd2, 0xc0, 0x3a,
  0x67, 0x30, 0xf2, 0x0c, 0x73, 0xe3, 0xd9, 0x52, 0xfc, 0xe5, 0x32, 0x08,
  0x02, 0x21, 0x92, 0xc1, 0x0d, 0xa1, 0x85, 0x41, 0xab, 0xb5, 0xb8, 0x15,
  0xe5, 0x86, 0x97, 0x2b, 0x74, 0x8f, 0x64, 0xcd, 0x35, 0x76, 0x02, 0xb0,
  0x6b, 0x1e, 0xee, 0xfc, 0xfa, 0x68, 0xa7, 0xdc, 0xb3, 0x94, 0xa9, 0x6a,
  0xbe, 0xcf, 0x56, 0x1d, 0xf6, 0xe6, 0x09, 0xca, 0x03, 0x94, 0x3c, 0x9a,
  0xa3, 0xd5, 0xfc, 0xe4, 0x1b, 0x11, 0x5e, 0xa3, 0x3e, 0x91, 0x06, 0xdf,
  0x46, 0x3e, 0xf2, 0xbe, 0x70, 0xa8, 0xff, 0x75, 0x1c, 0xe9, 0xbf, 0xb9,
  0x93, 0x31, 0x2f, 0x3c, 0x1e, 0xe8, 0x7d, 0x64, 0xe7, 0xa4, 0xbd, 0x66,
  0x04, 0xdc, 0x34, 0x89, 0xa0, 0x8d, 0xc2, 0xc6, 0xcf, 0x1e, 0xf1, 0xed,
  0x00, 0x45, 0xb4, 0x55, 0x2c, 0x81, 0x7e, 0x8e, 0x95, 0x6c, 0x41, 0x24,
  0xc3, 0xcf, 0x2c, 0x5d, 0x8e, 0xbe, 0x8b, 0x13, 0xe6, 0x7d, 0xc3, 0x3b,
  0x14, 0xad, 0xaa, 0x3a, 0xb4, 0x99, 0xfb, 0x19, 0x2f, 0x0b, 0x8a, 0x44,
  0x77, 0xf3, 0x0f, 0xf7, 0xf7, 0xb5, 0x90, 0x1a, 0xab, 0x73, 0x92, 0xd0,
  0x49, 0x07, 0x95, 0x6a, 0xb8, 0xa8, 0x86, 0xb5, 0x1e, 0x00, 0xae, 0x79,
  0x70, 0x06, 0x2d, 0xcc, 0x45, 0xb2, 0x8c, 0xba, 0xdd, 0x40, 0x01, 0x96,
  0xe6, 0x8b, 0xbb, 0x74, 0x53, 0x15, 0x75, 0xfe, 0xcf, 0x5f, 0x3f, 0xd0,
  0x7e, 0xa1, 0xc1, 0x07, 0xe7, 0x2d, 0x2f, 0x06, 0x87, 0xb0, 0xcf, 0x75,
  0x9a, 0x77, 0xab, 0xb5, 0xb6, 0x72, 0x12, 0x2d, 0xe8
};

int sample_device_cert_len = sizeof(sample_device_cert_ptr);

const unsigned char sample_device_private_key_ptr[] = {
  0x30, 0x82, 0x04, 0xa3, 0x02, 0x01, 0x00, 0x02, 0x82, 0x01, 0x01, 0x00,
  0xc4, 0xc3, 0x70, 0x40, 0x4d, 0x54, 0x38, 0xba, 0x94, 0x3f, 0x76, 0x0b,
  0xb8, 0x30, 0x5c, 0x60, 0xe8, 0x47, 0xd2, 0xae, 0x3b, 0xfd, 0xf0, 0xbd,
  0x99, 0x6b, 0xba, 0x75, 0x06, 0x81, 0x70, 0xc6, 0xdf, 0x34, 0xd4, 0xa0,
  0xd5, 0x11, 0xaf, 0xdc, 0xa4, 0xc9, 0x4d, 0x37, 0xc6, 0x24, 0x41, 0xaa,
  0x03, 0x62, 0x75, 0xbf, 0xb8, 0x09, 0xb2, 0xcf, 0x8f, 0x33, 0x0a, 0x57,
  0x40, 0x1b, 0x84, 0x27, 0x36, 0x28, 0x64, 0xf2, 0xcf, 0x8d, 0x6e, 0x79,
  0x6c, 0xdc, 0x95, 0xb8, 0x45, 0x31, 0x1f, 0xe0, 0xed, 0x71, 0xc0, 0x23,
  0xee, 0xa2, 0x79, 0xdd, 0x03, 0xae, 0xce, 0x6c, 0x9d, 0x3b, 0x2f, 0x34,
  0x7a, 0x53, 0x73, 0x8b, 0x48, 0xcf, 0xfb, 0x25, 0x47, 0xc0, 0xae, 0x8d,
  0x25, 0x0e, 0x72, 0x28, 0xe0, 0x6e, 0x71, 0x5c, 0x35, 0x30, 0x0f, 0xb2,
  0x8d, 0x75, 0x0c, 0x59, 0x6c, 0x59, 0x89, 0x54, 0x40, 0xfd, 0x7d, 0x83,
  0x34, 0xb2, 0x15, 0x7a, 0x77, 0x58, 0x89, 0xf5, 0x8e, 0xdf, 0xfb, 0x2e,
  0xa5, 0x02, 0x9a, 0x78, 0x44, 0xc4, 0x8f, 0x46, 0x42, 0x98, 0x77, 0xd2,
  0x6e, 0x81, 0x86, 0xe7, 0x32, 0xd9, 0xbb, 0xc8, 0x3a, 0xa2, 0xa0, 0x08,
  0x54, 0xdf, 0xad, 0x83, 0xaa, 0x5c, 0x9f, 0xd5, 0xd3, 0xca, 0xd8, 0x3c,
  0xe3, 0x0a, 0xff, 0x9f, 0x78, 0x2b, 0x2d, 0x5f, 0x53, 0xf0, 0xed, 0xa4,
  0xe0, 0x48, 0x5e, 0x8c, 0x42, 0x50, 0xb1, 0xec, 0xde, 0xe8, 0x7e, 0xd4,
  0xfc, 0x3c, 0x14, 0x2c, 0x06, 0x96, 0x37, 0x56, 0xc2, 0x29, 0x2b, 0xd1,
  0xa3, 0x80, 0x19, 0xfe, 0xe9, 0x56, 0xf4, 0x69, 0x7e, 0x42, 0x91, 0x74,
  0xdd, 0x06, 0x70, 0x62, 0x2e, 0xf5, 0xac, 0x5a, 0xfc, 0xc6, 0xc4, 0x49,
  0x1c, 0xe8, 0xc4, 0xf3, 0xcd, 0xd8, 0x34, 0xca, 0x76, 0xee, 0x4e, 0xa3,
  0x08, 0x06, 0x54, 0x89, 0x02, 0x03, 0x01, 0x00, 0x01, 0x02, 0x82, 0x01,
  0x00, 0x36, 0xb0, 0xbb, 0xfa, 0xa3, 0x83, 0xcd, 0x60, 0xce, 0xe3, 0xf4,
  0xc3, 0xbd, 0x26, 0x74, 0x06, 0xdb, 0x89, 0x5b, 0x1d, 0xe2, 0xbe, 0xea,
  0xb3, 0x48, 0x79, 0x91, 0x12, 0x06, 0x04, 0xe4, 0x7b, 0xe2, 0x7e, 0xa4,
  0xbb, 0x2f, 0x7e, 0x03, 0x0b, 0xa9, 0x21, 0xea, 0xbc, 0x9d, 0xee, 0x65,
  0xf2, 0x03, 0x8e, 0xd2, 0x7b, 0xbf, 0x83, 0xb2, 0x97, 0xce, 0x8d, 0xb9,
  0x4a, 0x17, 0x1f, 0x8e, 0xd3, 0xf7, 0x51, 0xb2, 0xfd, 0x6a, 0x83, 0x3d,
  0x39, 0xb2, 0xf0, 0x7d, 0x0d, 0x02, 0xee, 0x6c, 0x95, 0xf0, 0x69, 0xb5,
  0xa6, 0x47, 0x26, 0x12, 0x09, 0x44, 0x84, 0xca, 0x0b, 0x96, 0x88, 0x64,
  0xce, 0x89, 0x51, 0xb8, 0xc3, 0xf6, 0x31, 0x18, 0xf5, 0x7b, 0xc4, 0x2a,
  0xc0, 0x40, 0x94, 0x8b, 0x56, 0xa1, 0x4b, 0x11, 0x67, 0x37, 0xc1, 0x6c,
  0x1b, 0x8d, 0x06, 0x03, 0xb0, 0xb7, 0x55, 0x0b, 0xbe, 0x4a, 0x99, 0x9e,
  0x2f, 0x17, 0xb9, 0x38, 0x0d, 0xa5, 0x78, 0x10, 0xb1, 0xbf, 0x82, 0xb8,
  0xc8, 0x46, 0x53, 0xfd, 0x0e, 0xa9, 0x2e, 0x42, 0x74, 0x33, 0x4f, 0x6f,
  0xd3, 0xe2, 0x63, 0x03, 0xd8, 0x50, 0xc6, 0xc6, 0x6e, 0x61, 0xa2, 0xd5,
  0xf1, 0x6e, 0x28, 0x00, 0x09, 0xec, 0xd6, 0x2f, 0xa6, 0x27, 0x7b, 0xd3,
  0xee, 0xd6, 0x5e, 0x00, 0x36, 0x2a, 0x76, 0xdc, 0x87, 0xd6, 0x08, 0xa6,
  0x31, 0x97, 0xa1, 0x39, 0x7a, 0x74, 0x53, 0x62, 0xf8, 0x54, 0xd8, 0xb5,
  0xcd, 0x2e, 0x02, 0x50, 0x70, 0x53, 0xf2, 0x11, 0x26, 0x68, 0xb8, 0x4f,
  0xa5, 0x23, 0x05, 0x61, 0x12, 0xc2, 0x8b, 0x7e, 0x50, 0xe7, 0x23, 0x56,
  0xa7, 0xca, 0x0a, 0xcc, 0xa9, 0x5b, 0x7f, 0xb9, 0x03, 0x94, 0x4e, 0xfe,
  0x62, 0x61, 0x7b, 0x11, 0x10, 0x8f, 0x44, 0xb2, 0x18, 0x0b, 0x43, 0x18,
  0xf7, 0xec, 0xad, 0xb7, 0x21, 0x02, 0x81, 0x81, 0x00, 0xe8, 0xa0, 0xac,
  0x95, 0xfa, 0x96, 0x3e, 0x50, 0xe1, 0xaa, 0xbf, 0x82, 0x85, 0xa1, 0x2e,
  0x92, 0x1e, 0x97, 0x6c, 0x50, 0x8b, 0x2c, 0x3b, 0x66, 0x99, 0x3b, 0xba,
  0xea, 0x12, 0xf8, 0xf8, 0x06, 0x19, 0x55, 0x27, 0xd3, 0x47, 0x7e, 0x23,
  0xf0, 0x86, 0x3c, 0x3a, 0x8d, 0x6e, 0xfa, 0x06, 0x43, 0xcd, 0x45, 0xdd,
  0xb3, 0x20, 0x68, 0x26, 0x39, 0xeb, 0xc6, 0x64, 0x10, 0x92, 0x47, 0x61,
  0xe1, 0x30, 0xf0, 0x62, 0x8f, 0x12, 0xce, 0x6b, 0xf4, 0x57, 0x9a, 0xce,
  0xc4, 0xe3, 0x14, 0x5d, 0xb1, 0xb5, 0x5f, 0xb4, 0x51, 0x0c, 0xf8, 0x8c,
  0xcf, 0x04, 0xd1, 0x9f, 0xeb, 0xbf, 0xc7, 0xbe, 0x87, 0x9e, 0xca, 0x91,
  0x4a, 0x72, 0x20, 0x3a, 0x46, 0x56, 0xfd, 0xd9, 0x4e, 0xbe, 0x10, 0xb4,
  0xf7, 0xe6, 0xa6, 0xe6, 0x1e, 0x2f, 0x21, 0x66, 0x28, 0x22, 0x77, 0xbb,
  0xea, 0x88, 0x79, 0x10, 0x77, 0x02, 0x81, 0x81, 0x00, 0xd8, 0x88, 0x50,
  0xa2, 0xb7, 0x59, 0x91, 0x22, 0xa6, 0x20, 0x28, 0x13, 0xb1, 0x99, 0xbf,
  0xfa, 0x30, 0xcc, 0xf2, 0x14, 0xbf, 0xd2, 0x66, 0xf3, 0xb4, 0x8d, 0xd3,
  0x3b, 0xf9, 0x2c, 0x81, 0x00, 0xf6, 0xe7, 0x13, 0x9a, 0x71, 0x9b, 0x8d,
  0x75, 0xa0, 0xa2, 0x93, 0x33, 0xa9, 0x73, 0x83, 0x79, 0x30, 0xe0, 0x8f,
  0x5b, 0x2e, 0xb9, 0x77, 0xa3, 0x3b, 0xef, 0xc3, 0x24, 0x72, 0x81, 0x76,
  0x42, 0x4f, 0x67, 0x08, 0xc1, 0x11, 0x2e, 0xf9, 0x3e, 0x03, 0x12, 0xa0,
  0x20, 0xaf, 0x24, 0x5c, 0x9c, 0x35, 0x85, 0x97, 0x07, 0x24, 0x9f, 0xeb,
  0x9c, 0x28, 0xee, 0xf4, 0x0e, 0xd6, 0xd6, 0x24, 0x0e, 0x8a, 0xf9, 0xa9,
  0x70, 0x73, 0x68, 0x4f, 0x3b, 0xfe, 0xf7, 0x32, 0xe7, 0x2e, 0x5f, 0x73,
  0xb2, 0x5a, 0x28, 0x6d, 0x01, 0x76, 0x64, 0x0a, 0x61, 0x28, 0x92, 0x65,
  0x5e, 0x96, 0xa2, 0x02, 0xff, 0x02, 0x81, 0x80, 0x3d, 0xd2, 0x9d, 0xab,
  0x4a, 0x2a, 0x6d, 0xab, 0x3f, 0x1e, 0x0a, 0xc1, 0x5c, 0x54, 0x26, 0xb5,
  0x4c, 0x8d, 0xff, 0x8a, 0x34, 0x42, 0x70, 0x12, 0xe7, 0x3c, 0x59, 0x83,
  0x65, 0xc1, 0x66, 0xe0, 0xf0, 0x10, 0x92, 0x81, 0xf2, 0xe9, 0x12, 0x12,
  0x15, 0x0a, 0xa2, 0xa0, 0xfd, 0xd2, 0x52, 0xa1, 0xe8, 0x46, 0xde, 0x11,
  0x81, 0xd6, 0x4b, 0xfa, 0x6e, 0xaf, 0x8d, 0xde, 0x5d, 0x91, 0xbc, 0xf0,
  0x84, 0xfa, 0x0d, 0xa7, 0x6a, 0x5f, 0x13, 0x8f, 0x9f, 0x4c, 0x94, 0x10,
  0xfd, 0x2c, 0x67, 0x6e, 0x17, 0xfe, 0xb4, 0x44, 0x2a, 0x07, 0x50, 0x1c,
  0xa0, 0x72, 0x39, 0x67, 0x04, 0xd3, 0xc7, 0xcd, 0xf1, 0x24, 0x72, 0x92,
  0x6f, 0x5c, 0x23, 0x40, 0x98, 0x53, 0xe4, 0x51, 0xa9, 0xef, 0x74, 0xb8,
  0xc1, 0x42, 0xaf, 0xbb, 0x6b, 0xd9, 0x1b, 0x76, 0x25, 0x1a, 0xdf, 0x05,
  0x08, 0x79, 0xec, 0x27, 0x02, 0x81, 0x80, 0x39, 0x05, 0xf5, 0x0e, 0x54,
  0xf0, 0xbe, 0x7a, 0xfc, 0x7a, 0xdd, 0x73, 0x0a, 0x43, 0x6e, 0x3e, 0x4a,
  0x19, 0xbe, 0xea, 0xdd, 0xf5, 0x5f, 0xed, 0x70, 0x30, 0x25, 0x5f, 0xd6,
  0xe7, 0xf4, 0x75, 0x37, 0x90, 0x75, 0x26, 0x28, 0x23, 0x09, 0xe6, 0xdf,
  0x4d, 0xd1, 0x2c, 0x3a, 0xc4, 0xd3, 0xeb, 0xd7, 0x86, 0x5b, 0xda, 0x6c,
  0x7c, 0xa5, 0x58, 0x14, 0x91, 0xb8, 0xb7, 0x61, 0x7c, 0x5c, 0x93, 0x6b,
  0xeb, 0xbb, 0x6f, 0x74, 0xc2, 0x05, 0x1b, 0x62, 0x9d, 0xc6, 0x13, 0xb5,
  0x6c, 0x03, 0x03, 0x94, 0x48, 0xc1, 0x14, 0x3d, 0x7d, 0xec, 0x03, 0x6c,
  0xf8, 0x38, 0xc7, 0xab, 0xa6, 0x2b, 0x4a, 0xb5, 0x28, 0xb8, 0x89, 0x87,
  0xab, 0x01, 0xaa, 0xd0, 0x23, 0x73, 0x81, 0x54, 0x42, 0x08, 0xeb, 0x00,
  0x39, 0x43, 0x33, 0xae, 0x64, 0xfc, 0x22, 0xc8, 0x17, 0x7d, 0xa0, 0xa2,
  0x54, 0xba, 0x2b, 0x02, 0x81, 0x81, 0x00, 0xad, 0x24, 0xc9, 0x9f, 0x74,
  0x3f, 0x7a, 0xdc, 0x68, 0x0d, 0x5b, 0x94, 0x00, 0x23, 0x39, 0x49, 0xdb,
  0xd8, 0xcf, 0x00, 0x54, 0xec, 0xd0, 0xbd, 0x5b, 0xe5, 0xeb, 0xa2, 0xf9,
  0x8f, 0xf2, 0xeb, 0x8f, 0x51, 0x71, 0x93, 0x23, 0xcb, 0xc4, 0x74, 0xde,
  0x3a, 0xec, 0xb7, 0xa6, 0xee, 0x81, 0xc0, 0x19, 0x79, 0xde, 0x28, 0xb6,
  0x8f, 0x8a, 0xef, 0x3d, 0x28, 0x86, 0x0f, 0xd5, 0x4e, 0x9f, 0x3f, 0x9a,
  0xdd, 0x67, 0x34, 0x01, 0xc8, 0x09, 0x2e, 0x60, 0x33, 0x99, 0x3b, 0x76,
  0xeb, 0xee, 0x4a, 0x37, 0x39, 0xc4, 0x80, 0xd6, 0xfa, 0xa7, 0x73, 0x14,
  0x41, 0x83, 0x57, 0x1d, 0x82, 0x65, 0x10, 0xc8, 0xab, 0x17, 0xa2, 0xd2,
  0xd2, 0x01, 0x49, 0x4b, 0x5a, 0xb4, 0xee, 0x4d, 0xe1, 0x26, 0x55, 0xf3,
  0x74, 0x8c, 0xb7, 0x17, 0xf4, 0x10, 0x11, 0x53, 0x4c, 0x45, 0x1b, 0x69,
  0x41, 0xe7, 0xad
};

int sample_device_private_key_len = sizeof(sample_device_private_key_ptr);

/* Device Key type. */
#ifndef DEVICE_KEY_TYPE
 #define DEVICE_KEY_TYPE                             NX_SECURE_X509_KEY_TYPE_RSA_PKCS1_DER /* Use for RSA cert and keys */
#endif /* DEVICE_KEY_TYPE */

#endif /* USE_DEVICE_CERTIFICATE */

#ifdef USE_SE05x_DEVICE_CERTIFICATE
/* The X.509 certificate is retrieved from the EdgeLock SE05x secure element

   The EC private key is stored securely inside the EdgeLock SE05x secure element.
   The TLS client authentication is performed by the EdgeLock SE05x secure element.
*/

/* The EC dummy private key ANS.1 coding: */
/*SEQ(30) LEN=0x77{
    INT(02) LEN=0x1 VAL=01
    OCTET STRING(04) LEN=0x20 VAL=00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    SEQ(A0) LEN=0xA{
        OID(06) LEN=0x8 VAL=UNIVERSAL OID.1.2.840.10045.3.1.7
    };
    SEQ(A1) LEN=0x44{
        BIT STRING(03) LEN=0x42 VAL=00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    };
}; */

/* Dummy Private-Key: NIST CURVE: P-256 */
const unsigned char dummy_device_private_key_ptr[] = {
		0x30, 0x77, 0x02, 0x01, 0x01, 0x04, 0x20, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0,
		0x0A, 0x06, 0x08, 0x2A, 0x86, 0x48, 0xCE, 0x3D,
		0x03, 0x01, 0x07, 0xA1, 0x44, 0x03, 0x42, 0x00,
		0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

int dummy_device_private_key_len = sizeof(dummy_device_private_key_ptr);

/* Device Key type. */
#ifndef DEVICE_KEY_TYPE
#define DEVICE_KEY_TYPE                             NX_SECURE_X509_KEY_TYPE_EC_DER
#endif /* DEVICE_KEY_TYPE */

#endif /* USE_SE05x_DEVICE_CERTIFICATE */


/* Define the Azure RTOS IOT thread stack and priority.  */
#ifndef NX_AZURE_IOT_STACK_SIZE
 #define NX_AZURE_IOT_STACK_SIZE                   (2048)
#endif /* NX_AZURE_IOT_STACK_SIZE */

#ifndef NX_AZURE_IOT_THREAD_PRIORITY
 #define NX_AZURE_IOT_THREAD_PRIORITY     (4)
#endif /* NX_AZURE_IOT_THREAD_PRIORITY */

#ifndef SAMPLE_MAX_BUFFER
 #define SAMPLE_MAX_BUFFER                           (256)
#endif /* SAMPLE_MAX_BUFFER */

/* Define the sample thread stack and priority.  */
#ifndef SAMPLE_STACK_SIZE
 #define SAMPLE_STACK_SIZE                              (2048)
#endif /* SAMPLE_STACK_SIZE */

#ifndef SAMPLE_THREAD_PRIORITY
 #define SAMPLE_THREAD_PRIORITY                  (16)
#endif /* SAMPLE_THREAD_PRIORITY */

/* Define sample properties count. */
#define MAX_PROPERTY_COUNT                          2

/** CONFIG ERROR CHECKER **/
#if    ( (EVSE_SAS_AUTH  == 0) &&  (EVSE_X509_AUTH == 0)  && (EVSE_X509_SE050_AUTH ==0) ||  (EVSE_SAS_AUTH + EVSE_X509_AUTH + EVSE_X509_SE050_AUTH  )>1)

CONFIG  ERROR > NO AUTH METHOD SELECTED
CONFIG ERROR  > POSSIBLY MORE THAN ONE AUTH METHOD WAS SELECTED
#endif


#ifdef __cplusplus
}
#endif
#endif /* SAMPLE_CONFIG_H */
